// Generated by CoffeeScript 1.6.3
(function() {
  var poincareStep, root, solveSystem;

  solveSystem = function(a, b, c, d, f) {
    var b2, delta, den, g, h, p1, p2, sqdelta;
    b2 = b * b;
    g = a * f - c * d;
    h = a * c + d * f;
    den = 2.0 * b2 * (c * c + f * f);
    delta = b2 * (b2 * b2 - 4.0 * g * g - 4.0 * b2 * h);
    sqdelta = Math.sqrt(delta);
    p1 = b2 * b * c + 2.0 * b * f * g;
    p2 = b2 * b * f - 2.0 * b * c * g;
    switch (false) {
      case !(c > 0):
        return [(p1 + c * sqdelta) / den, (p2 + f * sqdelta) / den, (p1 - c * sqdelta) / den, (p2 - f * sqdelta) / den];
      case !(c < 0):
        return [(p1 - c * sqdelta) / den, (p2 - f * sqdelta) / den, (p1 + c * sqdelta) / den, (p2 + f * sqdelta) / den];
      default:
        if (f === 0) {
          return [a / b, d / b, a / b, d / b];
        } else {
          return [a / b, (p2 + f * sqdelta) / den, a / b, (p2 - f * sqdelta) / den];
        }
    }
  };

  poincareStep = function(q, p, h) {
    var D, D2h, a, b, c, d, dq1x, dq1y, dq2x, dq2y, dqx, dqy, f, _ref;
    D = 1.0 - q.x * q.x - q.y * q.y;
    D2h = D * D * h;
    a = D * D2h * p.x;
    b = 8.0 * D;
    c = 16.0 * q.x;
    d = D * D2h * p.y;
    f = 16.0 * q.y;
    _ref = solveSystem(a, b, c, d, f), dq1x = _ref[0], dq1y = _ref[1], dq2x = _ref[2], dq2y = _ref[3];
    if (q.x > 0) {
      dqx = dq2x;
      dqy = dq2y;
    } else {
      dqx = dq1x;
      dqy = dq1y;
    }
    q.x = q.x + dqx;
    q.y = q.y + dqy;
    p.x = 8.0 * dqx / D2h;
    p.y = 8.0 * dqy / D2h;
    return [q, p];
  };

  root = self.cofgl != null ? self.cofgl : self.cofgl = {};

  root.poincareStep = poincareStep;

}).call(this);
